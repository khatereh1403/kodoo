
/* /persian_calendar/static/src/js/format_utils.js */
odoo.define('@persian_calendar/js/format_utils',['@web/core/l10n/translation','@web/core/registry','@web/model/relational_model/utils'],function(require){'use strict';let __exports={};const{_t}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{combineModifiers}=require("@web/model/relational_model/utils");const X2M_TYPES=__exports.X2M_TYPES=["one2many","many2many"];const NUMERIC_TYPES=["integer","float","monetary"];__exports.leftPad=leftPad;function leftPad(number,targetLength){var output=number+'';while(output.length<targetLength){output='0'+output;}
return output;}
const BUTTON_CLICK_PARAMS=__exports.BUTTON_CLICK_PARAMS=["name","type","args","context","close","confirm","confirm-title","confirm-label","special","effect","help","debounce","noSaveDialog",];__exports.archParseBoolean=archParseBoolean;function archParseBoolean(str,trueIfEmpty=false){return str?!/^false|0$/i.test(str):trueIfEmpty;}
function getViewClass(type){const isValidType=Boolean(type)&&registry.category("views").contains(type);return isValidType&&`o_${type}_view`;}
__exports.computeViewClassName=computeViewClassName;function computeViewClassName(viewType,rootNode,additionalClassList=[]){const subType=rootNode?.getAttribute("js_class");const classList=rootNode?.getAttribute("class")?.split(" ")||[];const uniqueClasses=new Set([getViewClass(viewType),getViewClass(subType),...classList,...additionalClassList,]);return Array.from(uniqueClasses).filter((c)=>c).join(" ");}
const computeReportMeasures=__exports.computeReportMeasures=(fields,fieldAttrs,activeMeasures)=>{const measures={__count:{name:"__count",string:_t("Count"),type:"integer"},};for(const[fieldName,field]of Object.entries(fields)){if(fieldName==="id"||!field.store){continue;}
const{isInvisible}=fieldAttrs[fieldName]||{};if(isInvisible){continue;}
if(["integer","float","monetary"].includes(field.type)&&field.group_operator!==undefined){measures[fieldName]=field;}}
for(const measure of activeMeasures){if(!measures[measure]){measures[measure]=fields[measure];}}
for(const fieldName in fieldAttrs){if(fieldAttrs[fieldName].string&&fieldName in measures){measures[fieldName].string=fieldAttrs[fieldName].string;}}
const sortedMeasures=Object.entries(measures).sort(([m1,f1],[m2,f2])=>{if(m1==="__count"||m2==="__count"){return m1==="__count"?1:-1;}
return f1.string.toLowerCase().localeCompare(f2.string.toLowerCase());});return Object.fromEntries(sortedMeasures);};__exports.getFormattedValue=getFormattedValue;function getFormattedValue(record,fieldName,attrs){const field=record.fields[fieldName];const formatter=registry.category("formatters").get(field.type,(val)=>val);const formatOptions={escape:false,data:record.data,isPassword:"password"in attrs,digits:attrs.digits?JSON.parse(attrs.digits):field.digits,field:record.fields[fieldName],};if(field.type=="date"||field.type=="datetime"){const formattedValue=record.data[fieldName]!==undefined?formatter(record.data[fieldName],formatOptions):"";if(!formattedValue){return formattedValue;}
let jressult_str="";if(formattedValue.split(' ')[1]){if(formattedValue.split(' ')[0].split('/')[2]){const gressult=formattedValue.split(' ')[0].split('/');const jressult=farvardin.gregorianToSolar(parseInt(gressult[0]),parseInt(gressult[1]),parseInt(gressult[2]));jressult_str=`${jressult[0]}/${leftPad(jressult[1], 2)}/${leftPad(jressult[2], 2)} ${formattedValue.split(' ')[1]}`;}else if(formattedValue.split(' ')[0].split('-')[2]){const gressult=formattedValue.split(' ')[0].split('-');const jressult=farvardin.gregorianToSolar(parseInt(gressult[0]),parseInt(gressult[1]),parseInt(gressult[2]));jressult_str=`${jressult[0]}-${leftPad(jressult[1], 2)}-${leftPad(jressult[2], 2)} ${formattedValue.split(' ')[1]}`;}}
else{if(formattedValue.split('/')[2]){const gressult=formattedValue.split('/');const jressult=farvardin.gregorianToSolar(parseInt(gressult[0]),parseInt(gressult[1]),parseInt(gressult[2]));jressult_str=`${jressult[0]}/${leftPad(jressult[1], 2)}/${leftPad(jressult[2], 2)}`;}else if(formattedValue.split('-')[2]){const gressult=formattedValue.split('-');const jressult=farvardin.gregorianToSolar(parseInt(gressult[0]),parseInt(gressult[1]),parseInt(gressult[2]));jressult_str=`${jressult[0]}-${leftPad(jressult[1], 2)}-${leftPad(jressult[2], 2)}`;}}
return jressult_str;}
return record.data[fieldName]!==undefined?formatter(record.data[fieldName],formatOptions):"";}
__exports.getActiveActions=getActiveActions;function getActiveActions(rootNode){return{type:"view",edit:archParseBoolean(rootNode.getAttribute("edit"),true),create:archParseBoolean(rootNode.getAttribute("create"),true),delete:archParseBoolean(rootNode.getAttribute("delete"),true),duplicate:archParseBoolean(rootNode.getAttribute("duplicate"),true),};}
__exports.getClassNameFromDecoration=getClassNameFromDecoration;function getClassNameFromDecoration(decoration){if(decoration==="bf"){return"fw-bold";}else if(decoration==="it"){return"fst-italic";}
return`text-${decoration}`;}
__exports.getDecoration=getDecoration;function getDecoration(rootNode){const decorations=[];for(const name of rootNode.getAttributeNames()){if(name.startsWith("decoration-")){decorations.push({class:getClassNameFromDecoration(name.replace("decoration-","")),condition:rootNode.getAttribute(name),});}}
return decorations;}
__exports.isX2Many=isX2Many;function isX2Many(field){return field&&X2M_TYPES.includes(field.type);}
__exports.isNumeric=isNumeric;function isNumeric(field){return NUMERIC_TYPES.includes(field.type);}
__exports.isNull=isNull;function isNull(value){return[null,undefined].includes(value);}
__exports.processButton=processButton;function processButton(node){const withDefault={close:(val)=>archParseBoolean(val,false),context:(val)=>val||"{}",};const clickParams={};for(const{name,value}of node.attributes){if(BUTTON_CLICK_PARAMS.includes(name)){clickParams[name]=withDefault[name]?withDefault[name](value):value;}}
return{className:node.getAttribute("class")||"",disabled:!!node.getAttribute("disabled")||false,icon:node.getAttribute("icon")||false,title:node.getAttribute("title")||undefined,string:node.getAttribute("string")||undefined,options:JSON.parse(node.getAttribute("options")||"{}"),display:node.getAttribute("display")||"selection",clickParams,column_invisible:node.getAttribute("column_invisible"),invisible:combineModifiers(node.getAttribute("column_invisible"),node.getAttribute("invisible"),"OR"),readonly:node.getAttribute("readonly"),required:node.getAttribute("required"),};}
__exports.processMeasure=processMeasure;function processMeasure(measure){if(Array.isArray(measure)){return measure.map(processMeasure);}
return measure==="__count__"?"__count":measure;}
__exports.toStringExpression=toStringExpression;function toStringExpression(str){return`\`${str.replaceAll("`", "\\`")}\``;}
__exports.uuid=uuid;function uuid(){const array=new Uint8Array(8);window.crypto.getRandomValues(array);return[...array].map((b)=>b.toString(16).padStart(2,"0")).join("");}
return __exports;});;

/* /persian_calendar/static/src/js/list.js */
odoo.define('@persian_calendar/js/list',['@web/core/utils/patch','@web/views/list/list_renderer','@persian_calendar/js/format_utils'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{ListRenderer}=require("@web/views/list/list_renderer");const{getFormattedValue}=require("@persian_calendar/js/format_utils");const DEFAULT_GROUP_PAGER_COLSPAN=1;const FIELD_CLASSES={char:"o_list_char",float:"o_list_number",integer:"o_list_number",monetary:"o_list_number",text:"o_list_text",many2one:"o_list_many2one",};const FIXED_FIELD_COLUMN_WIDTHS={boolean:"70px",date:"92px",datetime:"146px",float:"92px",integer:"74px",monetary:"104px",handle:"33px",};patch(ListRenderer.prototype,{getCellTitle(column,record){const fieldType=this.fields[column.name].type;if(!(fieldType in FIXED_FIELD_COLUMN_WIDTHS)&&!["json","one2many","many2many"].includes(fieldType)){return this.getFormattedValue(column,record);}},getFieldClass(column){return column.attrs&&column.attrs.class;},getFormattedValue(column,record){const fieldName=column.name;if(column.options.enable_formatting===false){return record.data[fieldName];}
return getFormattedValue(record,fieldName,column.attrs);}})
return __exports;});;

/* /persian_calendar/static/src/js/datetime_field.js */
odoo.define('@persian_calendar/js/datetime_field',['@web/core/utils/patch','@web/views/fields/datetime/datetime_field','@web/core/l10n/dates'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{DateTimeField}=require("@web/views/fields/datetime/datetime_field");const{areDatesEqual,deserializeDate,deserializeDateTime,formatDate,formatDateTime,today,}=require("@web/core/l10n/dates");patch(DateTimeField.prototype,{getFormattedValue(valueIndex){const value=this.values[valueIndex];const ressult_date=value?this.field.type==="date"?formatDate(value):formatDateTime(value):"";if(!value||!ressult_date){return ressult_date;}
if(ressult_date.split(" ")[1]){return`${value.reconfigure().toLocaleString({  year: "numeric", month: "2-digit", day: "2-digit" })} ${ressult_date.split(" ")[1]}`;}else{return value.reconfigure().toLocaleString({year:"numeric",month:"2-digit",day:"2-digit"});}}});return __exports;});;

/* /persian_calendar/static/src/js/jdatetime.js */
odoo.define('@persian_calendar/js/jdatetime',['@web/core/utils/patch','@web/core/datetime/datetime_picker','@web/core/l10n/localization','@odoo/owl','@web/core/l10n/dates','@web/core/l10n/translation'],function(require){'use strict';let __exports={};const{patch}=require("@web/core/utils/patch");const{DateTimePicker}=require("@web/core/datetime/datetime_picker");const{localization}=require("@web/core/l10n/localization");const{Component,onWillRender,onWillUpdateProps,useState}=require("@odoo/owl");const{markRaw,markup,toRaw}=require("@odoo/owl");const{MAX_VALID_DATE,MIN_VALID_DATE,clampDate,is24HourFormat,isInRange,isMeridiemFormat,today,}=require("@web/core/l10n/dates");const{DateTime,Info}=luxon;const{_t}=require("@web/core/l10n/translation");const earliest=(date1,date2)=>(date1<date2?date1:date2);const getStartOfDecade=(date)=>Math.floor(date.year/10)*10;const jgetStartOfDecade=(date)=>Math.floor(Math.round(date.reconfigure({outputCalendar:'persian',locale:'fa'}).toLocaleString({year:'numeric'}))/10)*10;const getStartOfCentury=(date)=>Math.floor(date.year/100)*100;const jgetStartOfCentury=(date)=>Math.floor(Math.round(date.reconfigure({outputCalendar:'persian',locale:'fa'}).toLocaleString({year:'numeric'}))/100)*100;const getStartOfWeek=(date)=>{const{weekStart}=localization;return date.set({weekday:date.weekday<weekStart?weekStart-7:weekStart});};const latest=(date1,date2)=>(date1>date2?date1:date2);const numberRange=(min,max)=>[...Array(max-min)].map((_,i)=>i+min);const parseLimitDate=(value,defaultValue)=>clampDate(value==="today"?today():value||defaultValue,MIN_VALID_DATE,MAX_VALID_DATE);const toDateItem=({isOutOfRange=false,isValid=true,label,range,extraClass})=>({id:range[0].toISODate(),includesToday:isInRange(today(),range),isOutOfRange,isValid,label:String(range[0][label]),range,extraClass,});const jtoDateItem=({isOutOfRange=false,isValid=true,label,range,extraClass,jlable})=>({id:range[0].toISODate(),includesToday:isInRange(today(),range),isOutOfRange,isValid,label:jlable,range,extraClass,});const toWeekItem=(weekDayItems)=>({number:weekDayItems[3].range[0].weekNumber,days:weekDayItems,});function jtoWeekItem(weekDayItems){const date=weekDayItems[3].range[0];const jdate=farvardin.gregorianToSolar(date.year,date.month,date.day);const jday=new persianDate([jdate[0],jdate[1],jdate[2]]).toCalendar('persian');return({number:jday.format('w'),days:weekDayItems,})};const HOURS=numberRange(0,24).map((hour)=>[hour,String(hour)]);const MINUTES=numberRange(0,60).map((minute)=>[minute,String(minute||0).padStart(2,"0")]);const SECONDS=[...MINUTES];const MERIDIEMS=["AM","PM"];const PRECISION_LEVELS=new Map().set("days",{mainTitle:_t("Select month"),nextTitle:_t("Next month"),prevTitle:_t("Previous month"),step:{month:1},getTitle:(date,{additionalMonth})=>{if(!date){date=DateTime.now();}
const jdate=farvardin.gregorianToSolar(date.year,date.month,date.day);const jday=new persianDate([jdate[0],jdate[1],jdate[2]]).toCalendar('persian');const titles=[`${jday.format('MMMM')} ${jday.toLocale('en').format('YYYY')}`];if(additionalMonth){const jnext=jday.add('months',1);const next=date.plus({month:1});titles.push(`${jnext.format('MMMM')} ${jnext.toLocale('en').format('YYYY')}`);}
return titles;},getItems:(date,{additionalMonth,maxDate,minDate,showWeekNumbers,isDateValid,dayCellClass})=>{if(!date){date=DateTime.now();}
const startDates=[date];if(additionalMonth){startDates.push(date.plus({month:1}));}
return startDates.map((date,i)=>{let jdate=[]
if(!String(date.ts).includes("-",0)){jdate=farvardin.gregorianToSolar(date.year,date.month,date.day);}
else{jdate=[date.year,date.month,date.day];}
const jstartofmonth=new persianDate([jdate[0],jdate[1],jdate[2]]).toCalendar('persian').startOf("month").toCalendar('gregorian');const startofmonth=luxon.DateTime.local().set({"years":jstartofmonth.year(),"month":jstartofmonth.month(),"days":jstartofmonth.date()})
const jendofmonth=new persianDate([jdate[0],jdate[1],jdate[2]]).toCalendar('persian').endOf("month").toCalendar('gregorian');const endtofmonth=luxon.DateTime.local().set({"years":jendofmonth.year(),"month":jendofmonth.month(),"days":jendofmonth.date()})
const monthRange=[startofmonth,endtofmonth];const weeks=[];let startOfNextWeek=getStartOfWeek(monthRange[0]);for(let w=0;w<6;w++){const weekDayItems=[];for(let d=0;d<7;d++){const day=startOfNextWeek.plus({day:d});const jday=farvardin.gregorianToSolar(day.year,day.month,day.day);const range=[day.startOf("day"),day.endOf("day")];const dayItem=jtoDateItem({isOutOfRange:!isInRange(day,monthRange),isValid:isInRange(range,[minDate,maxDate])&&isDateValid?.(day),label:"day",range,extraClass:dayCellClass?.(day)||"",jlable:String(jday[2]),});weekDayItems.push(dayItem);if(d===6){startOfNextWeek=day.plus({day:1});}}
weeks.push(jtoWeekItem(weekDayItems));}
const daysOfWeek=weeks[0].days.map((d)=>[d.range[0].weekdayShort,d.range[0].weekdayLong,Info.weekdays("narrow",{locale:d.range[0].locale})[d.range[0].weekday-1],]);if(showWeekNumbers){daysOfWeek.unshift(["#",_t("Week numbers"),"#"]);}
return{id:`__month__${i}`,number:monthRange[0].month,daysOfWeek,weeks,};});},}).set("months",{mainTitle:_t("Select year"),nextTitle:_t("Next year"),prevTitle:_t("Previous year"),step:{year:1},getTitle:(date)=>String(date.reconfigure({outputCalendar:'persian',locale:'fa'}).toLocaleString({year:'numeric'})),getItems:(date,{maxDate,minDate})=>{const startOfYear=date.startOf("year");return numberRange(0,12).map((i)=>{const startOfMonth=startOfYear.plus({month:i});const range=[startOfMonth,startOfMonth.endOf("month")];return toDateItem({isValid:isInRange(range,[minDate,maxDate]),label:"monthShort",range,});});},}).set("years",{mainTitle:_t("Select decade"),nextTitle:_t("Next decade"),prevTitle:_t("Previous decade"),step:{year:10},getTitle:(date)=>`${jgetStartOfDecade(date) - 2} - ${jgetStartOfDecade(date) + 9}`,getItems:(date,{maxDate,minDate})=>{const startOfDecade=date.startOf("year").set({year:getStartOfDecade(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfYear=startOfDecade.plus({year:i});const range=[startOfYear,startOfYear.endOf("year")];const jday=farvardin.gregorianToSolar(range[1].year,range[1].month,range[1].day);return jtoDateItem({isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),label:"year",range,jlable:String(jday[0]),});});},}).set("decades",{mainTitle:_t("Select century"),nextTitle:_t("Next century"),prevTitle:_t("Previous century"),step:{year:100},getTitle:(date)=>`${jgetStartOfCentury(date) - 32} - ${jgetStartOfCentury(date) + 78}`,getItems:(date,{maxDate,minDate})=>{const startOfCentury=date.startOf("year").set({year:getStartOfCentury(date)});return numberRange(-GRID_MARGIN,GRID_COUNT+GRID_MARGIN).map((i)=>{const startOfDecade=startOfCentury.plus({year:i*10});const range=[startOfDecade,startOfDecade.plus({year:10,millisecond:-1})];const jday=farvardin.gregorianToSolar(range[0].year,range[0].month,range[0].day);return jtoDateItem({label:"year",isOutOfRange:i<0||i>=GRID_COUNT,isValid:isInRange(range,[minDate,maxDate]),range,jlable:String(jday[0]),});});},});const GRID_COUNT=10;const GRID_MARGIN=1;const NULLABLE_DATETIME_PROPERTY=[DateTime,{value:false},{value:null}];patch(DateTimePicker.prototype,{props:{focusedDateIndex:{type:Number,optional:true},showWeekNumbers:{type:Boolean,optional:true},daysOfWeekFormat:{type:String,optional:true},maxDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},maxPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},minDate:{type:[NULLABLE_DATETIME_PROPERTY,{value:"today"}],optional:true},minPrecision:{type:[...PRECISION_LEVELS.keys()].map((value)=>({value})),optional:true,},onSelect:{type:Function,optional:true},range:{type:Boolean,optional:true},rounding:{type:Number,optional:true},slots:{type:Object,shape:{buttons:{type:Object,optional:true}},optional:true,},type:{type:[{value:"date"},{value:"datetime"}],optional:true},value:{type:[NULLABLE_DATETIME_PROPERTY,{type:Array,element:NULLABLE_DATETIME_PROPERTY},],optional:true,},isDateValid:{type:Function,optional:true},dayCellClass:{type:Function,optional:true},},get activePrecisionLevel(){return PRECISION_LEVELS.get(this.state.precision);},adjustFocus(values,focusedDateIndex){if(!this.shouldAdjustFocusDate&&this.state.focusDate&&focusedDateIndex===this.props.focusedDateIndex){return;}
let dateToFocus=today();if(this.additionalMonth&&focusedDateIndex===1&&values[0]&&values[1]&&values[0].month!==values[1].month){dateToFocus=dateToFocus.minus({month:1});}
this.shouldAdjustFocusDate=false;if(this.values[0]){this.state.focusDate=this.values[0];}else{this.state.focusDate=this.clamp(dateToFocus.startOf("month"));}}});return __exports;});